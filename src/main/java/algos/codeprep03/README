# Picking Tickets

Consider an array of n ticket prices, tickets.
A number, m, is defined as the size of some subsequence
of tickets, s, where each element covers an unbroken range of integers.
That is, if the elements in s are sorted, the absolute difference between
any element j and j+1 is either 0 or 1.

Determine the maximum length of a subsequence chosen from the tickets array.

Example
tickets = [8,5,4,8,4]

Valid subsequences, sorted, are {4,4,5} and {8,8}.
These subsequences have m values of 3 and 2, respectively.
Return 3.

Function Description
Complete the function maxTickets in the editor below.

maxTickets has the following parameter(s):
    int tickets[n]: the ticket prices

Returns
    int: the maximum possible value of m

Constraints
- 1<= n <= 10^5
- 1<= tickets[i] <= 10^9





# Maximum Occurring Character

Given a string, return the character that appears the maximum number of times in the string.
The string will contain only ASCII characters, from the ranges ('a'-'z', 'A'-'Z', '0' - '9'),
and case matters. If there is a tie in the maximum number of times a character appears in the string,
return the character that appears first in the string.

Example
text = abbbaacc

Both 'a' and 'b' occur 3 times in text. Since 'a' occurs earlier, a is the answer.

Function Description

Complete the function maximumOccurringCharacter in the editor below.

maximumOccurringCharacter has the following parameter:
    string text: the string to be operated upon

Returns
    char: The most occurring character that appears first in the string





# Tool List

A milling machine in a manufacturing facility has a tool change system.
The tool changer holds n tools and some duplicate tools may be included.
The operator must move through the tools one at a time, either moving left or right.
The tool changer is circular, so when the last tool in the tools array is reached in
either direction, the next tool is at the other end of the array.

Given the name of the next tool needed, determine the minimum number of left or right
moves to reach it.

Example:

tools=['ballendmill', 'keywaycutter', 'slotdrill', 'facemill']
  startIndex = 1
  target = 'ballendmill'

The tool currently in use is keywaycutter at index 1. The desired tool is ballendmill at index 0.
It can be reached by moving right 3 steps or left 1 step. The minimum number of moves is 1.

Function Description Complete the function toolchanger in the editor below.

toochanger has the following parameter(s):
    str tool[n]: an array of tool names arranged in the order they appear in the toool changer
    int startIndex: index of the tool currently in use
    str target: name of the tool needed
Returns:
    int: minimum number of moves required to reach the needed tool

Constraints
 - 1<= n <= 100
 - 0 < startindex <= n-1
 1 <= lengths of tools[i] and target <= 100

